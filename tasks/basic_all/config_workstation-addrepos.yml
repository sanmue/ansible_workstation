# ###########################
# ### pacman.conf - Archlinux
# ###########################
- name: Config Workstation addrepos - pacman.conf - activate Color (Archlinux)
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/pacman.conf"
    regexp: "^#Color"
    line: "Color"
    backup: true
  when:
    - ansible_distribution == "Archlinux"

- name: Config Workstation addrepos - pacman.conf - activate ParallelDownloads (Archlinux)
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/pacman.conf"
    regexp: "^#ParallelDownloads.*"
    line: "ParallelDownloads = 5"
    backup: true
  when:
    - ansible_distribution == "Archlinux"

# multilib: If you want to run 32 bit applications on your x86_64 system... # e.g. for 'steam'
- name: Config Workstation addrepos - pacman.conf - activate multilib repo - check status flagfile (Archlinux)
  ansible.builtin.stat:
    path: "/home/{{ env_user }}/.ansible_addrepoMultilib"
  register: addrepomultilib

- name: Config Workstation addrepos - pacman.conf - activate multilib repo - step1 (Archlinux)
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/pacman.conf"
    regexp: "^#Include = /etc/pacman.d/mirrorlist"
    insertafter: '^#\[multilib\]'
    line: "Include = /etc/pacman.d/mirrorlist"
  when:
    - ansible_distribution == "Archlinux"
    - addrepomultilib.stat.exists == false

- name: Config Workstation addrepos - pacman.conf - activate multilib repo - step2 (Archlinux)
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/pacman.conf"
    regexp: '^#\[multilib\]'
    line: "[multilib]"
    backup: true
  when:
    - ansible_distribution == "Archlinux"
    - addrepomultilib.stat.exists == false

# modify /etc/pacman.d/mirrorlist to activate repo multilib needs to be done only once
- name: Config Workstation addrepos - pacman.conf - activate multilib repo - create flagfile (Archlinux)
  become: true
  become_user: "{{ env_user }}"
  ansible.builtin.shell:
    cmd: "touch /home/{{ env_user }}/.ansible_addrepoMultilib"
  args:
    creates: "/home/{{ env_user }}/.ansible_addrepoMultilib"
  when:
    - ansible_distribution == "Archlinux"

# ### ########################
# ### Chaotic-AUR  - Archlinux
# ### ########################
# * https://aur.chaotic.cx/docs

# - name: Config Workstation addrepos - Chaotic-AUR - import key (Arch)
#   become: true
#   community.general.pacman_key:
#     id: 3056513887B78AEB
#     keyserver: keyserver.ubuntu.com
#   when:
#     - ansible_distribution == "Archlinux"
# *** Error:
# fatal: [localhost]: FAILED! => {"changed": false, "msg": "key ID is not full-length: 3056513887B78AEB"}

# * https://github.com/chaotic-aur/chaotic-aur-ansible/blob/main/roles/chaotic_aur/tasks/main.yml
- name: Config Workstation addrepos - Check if Chaotic-AUR is installed already (Arch)
  ansible.builtin.stat:
    path: /etc/pacman.d/chaotic-mirrorlist
  register: caur_exists
  when:
    - ansible_distribution == "Archlinux"

- name: Config Workstation addrepos - Retrieve Chaotic-AUR master key and sign it (Arch)
  become: true
  ansible.builtin.shell:
    cmd: pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com && pacman-key --lsign-key 3056513887B78AEB
  when:
    - ansible_distribution == "Archlinux"
    - caur_exists.stat.exists | default(true) == false

- name: Config Workstation addrepos - Install Chaotic-AUR keyring and mirrorlist (Arch)
  become: true
  community.general.pacman:
    name:
      - https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst
      - https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst
    state: present
  when:
    - ansible_distribution == "Archlinux"
    - caur_exists.stat.exists | default(true) == false

- name: Config Workstation addrepos - Include chaotic-mirrorlist in pacman.conf (Arch)
  become: true
  ansible.builtin.blockinfile:
    path: "/etc/pacman.conf"
    backup: true
    prepend_newline: true
    append_newline: true
    # insertafter: EOF
    marker: "### {mark} 'chaotic-aur' ANSIBLE MANAGED BLOCK ###"
    block: |
      [chaotic-aur]
      Include = /etc/pacman.d/chaotic-mirrorlist
  when:
    - ansible_distribution == "Archlinux"
    - caur_exists.stat.exists | default(true) == false

- name: Config Workstation addrepos - update_cache (pacman -Sy) (Arch)
  become: true
  community.general.pacman:
    update_cache: true
  when:
    - ansible_distribution == "Archlinux"
    - caur_exists.stat.exists | default(true) == false
# #####################################
# ### pamac.conf - Archlinux with Pamac
# #####################################
# - name: Config Workstation addrepos - Check if exists pamac.conf (Archlinux)
#   ansible.builtin.stat:
#     path: /etc/pamac.conf
#   register: pamac_conf
#   when:
#     - ansible_distribution == "Archlinux"

# - name: Config Workstation addrepos - Enable AUR support for pamac gui (Archlinux)
#   ansible.builtin.shell:
#     cmd: sudo sed -Ei '/EnableAUR/s/^#//' /etc/pamac.conf
#   when:
#     - ansible_distribution == "Archlinux"
#     - pamac_conf.stat.exists

# - name: Config Workstation addrepos - Enable check updates for AUR packages in pamac (Archlinux)
#   ansible.builtin.shell:
#     cmd: sudo sed -Ei '/CheckAURUpdates/s/^#//' /etc/pamac.conf
#   when:
#     - ansible_distribution == "Archlinux"
#     - pamac_conf.stat.exists

# ##########
# ### Debian
# ##########

# --- Steam on Debian with Steam ppa
# - https://linuxcapable.com/how-to-install-steam-on-debian-linux/
# - https://wiki.debian.org/Steam
# - https://www.jeffgeerling.com/blog/2022/aptkey-deprecated-debianubuntu-how-fix-ansible

# 32-bit support: helpful for gamers who want to ensure compatibility with 32-bit and 64-bit games in Steams extensive library
- name: Config Workstation addrepos - Enable 32-bit support (Debian)
  ansible.builtin.command:
    cmd: sudo dpkg --add-architecture i386
  when:
    - ansible_distribution == "Debian"

- name: Config Workstation addrepos - Steam block - Import Steam key and add Steam repo (Debian)
  become: true # inhereted by tasks in the block
  block:
    - name: Config Workstation addrepos - Steam - Import Steam key (Debian)
      ansible.builtin.get_url:
        url: http://repo.steampowered.com/steam/archive/stable/steam.gpg
        dest: /usr/share/keyrings/steam.gpg

    - name: Config Workstation addrepos - Steam - Add Steam repo (Debian)
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64,i386 signed-by=/usr/share/keyrings/steam.gpg] http://repo.steampowered.com/steam/ stable steam"
        state: present

    - name: Config Workstation addrepos - Steam - remove unnecessary Steam sources lists (Debian)
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/apt/sources.list.d/steam-beta.list
        - /etc/apt/sources.list.d/steam-stable.list
  when: # applied to the tasks within a block, not to the block itself
    - ansible_distribution == "Debian"

# --- PowerShell
# https://learn.microsoft.com/en-us/powershell/scripting/install/install-debian?view=powershell-7.4

- name: Config Workstation addrepos - Download the Microsoft repository GPG keys (Debian)
  ansible.builtin.get_url:
    url: "https://packages.microsoft.com/config/debian/{{ env_lsb }}/packages-microsoft-prod.deb"
    dest: /tmp/packages-microsoft-prod.deb
    force_basic_auth: true
  when:
    - ansible_distribution == "Debian"

- name: Config Workstation addrepos - Register the Microsoft repository GPG keys (Debian)
  ansible.builtin.command:
    cmd: dpkg -i /tmp/packages-microsoft-prod.deb
  when:
    - ansible_distribution == "Debian"
# # neu: s.o.
# - name: Config Workstation addrepos - add repo for PowerShell (Debian)
#   ansible.builtin.apt_repository:
#     repo: "deb https://packages.microsoft.com/config/Debian/{{ env_lsb }}/packages-microsoft-prod.deb"
#     state: present
#     update_cache: yes
#   when:
#     - ansible_distribution == "Debian"
