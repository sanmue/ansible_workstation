# ###########
# ### UFW ###
# ###########

# ### UFW - allow
- name: UFW - allow KDE Connect / GSConnect (tcp) (Ubuntu)
  community.general.ufw:
    rule: allow
    port: 1714:1764 
    proto: tcp
    comment: KDE Connect / GSConnect
  when: ansible_distribution == "Ubuntu"
  register: firewall_ufw

- name: UFW - allow KDE Connect / GSConnect (tcp) (Archlinux)
  community.general.ufw:
    rule: allow
    port: 1714:1764 
    proto: tcp
    comment: KDE Connect / GSConnect
  when: 
    - ansible_distribution == "Archlinux"
    # - env_desktop == "gnome"
  register: firewall_ufw


- name: UFW - allow KDE Connect / GSConnect (udp) (Ubuntu)
  community.general.ufw:
    rule: allow
    port: 1714:1764
    proto: udp
    comment: KDE Connect / GSConnect
  when: ansible_distribution == "Ubuntu"
  register: firewall_ufw

- name: UFW - allow KDE Connect / GSConnect (udp) (Archlinux)
  community.general.ufw:
    rule: allow
    port: 1714:1764
    proto: udp
    comment: KDE Connect / GSConnect
  when:
    - ansible_distribution == "Archlinux"
    # - env_desktop == "gnome"
  register: firewall_ufw


# ### UFW - reload
- name: UFW - reload (Ubuntu)
  community.general.ufw:
    state: reloaded
  when: ansible_distribution == "Ubuntu" and
        firewall_ufw.changed

- name: UFW - reload (Archlinux)
  community.general.ufw:
    state: reloaded
  when:
    - ansible_distribution == "Archlinux"
    # - env_desktop == "gnome"
    - firewall_ufw.changed


# #################
# ### firewalld ###
# #################

# - name: firewalld - allow KDE Connect (Archlinux + KDE)
#   ansible.posix.firewalld:
#     service: kdeconnect
#     permanent: true
#     state: enabled
#     immediate: true
#   when:
#     - ansible_distribution in ["Archlinux"]
#     - env_desktop == "kde"
#   register: firewall_d

# - name: firewalld - reload (Archlinux + KDE)
#   ansible.builtin.command: firewall-cmd --reload
#   when:
#     - ansible_distribution in ["Archlinux"]
#     - env_desktop == "kde"
#     - firewall_d.changed
