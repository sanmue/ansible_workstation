
# #######
# ### vim
# #######

# ----------------
# ### VIM Settings

# alt:
#- name: set vim config for user "sandro" (.vimrc) (all)
#  ansible.builtin.script: "{{ env_PWD }}/tasks/config_all-settings-misc-vim.sh" # ab ansible version 2.10, davor nur "script:"
#  args:
#    creates: "/home/{{ env_user }}/.vimrc"

# neu (via global config-file):
- name: Set (Copy) vim global config (ubuntu)
  ansible.builtin.copy:
    src: "{{ env_PWD }}/files/vimrc_ubuntu.local"
    dest: /etc/vim/vimrc.local
    owner: root
    group: root
    mode: '0644'
    #mode: u=rw,g=r,o=r
    backup: yes
  when:
    - ansible_distribution == "Ubuntu"


- name: Set vim global config (Archlinux)
  ansible.builtin.copy:
    src: "{{ env_PWD }}/files/vimrc_arch"
    dest: /etc/vimrc
    owner: root
    group: root
    mode: '0644'
    #mode: u=rw,g=r,o=r
    backup: yes
  when:
    - ansible_distribution == "Archlinux"



# ---------------
# ### VIM plugins

# - https://github.com/dense-analysis/ale
- name: Create folder for vim git-plugins (all)
  become: true
  become_user: "{{ env_user }}"
  ansible.builtin.shell:
    cmd: mkdir -p /home/{{ env_user }}/.vim/pack/git-plugins/start
  args:
    creates: /home/{{ env_user }}/.vim/pack/git-plugins/start

- name: Install (git clone) vim plugin - Linter ALE (all)
  become: true
  become_user: "{{ env_user }}"
  ansible.builtin.git:
    repo: https://github.com/dense-analysis/ale.git
    dest: /home/{{ env_user }}/.vim/pack/git-plugins/start
    depth: 1



######################
### Visual Studio Code
######################

- name: Install 'Visual Studio Code' bzw 'Code-OSS' - Extension 'Sync Settings' by zokugun (Ubuntu)
  tags: workstation,ubuntu
  ansible.builtin.shell:
    cmd: code --install-extension zokugun.sync-settings
  become: true
  become_user: "{{ env_user }}"
  when:
    - ansible_distribution in ["Ubuntu"]   # hat unter Arch (mit ' Code - OSS') nicht funktioniert

- name: Start 'Visual Studio Code' (Ubuntu)
  tags: workstation,ubuntu
  ansible.builtin.shell:
    cmd: code >/dev/null 2>&1 &  # damit im Home-Verzeichnis der Config-Pfad von VS Code erstellt wird + später die settings.yml dorthin kopiert werden kann
  args:
      creates: /home/{{ env_user }}/.config/Code/User/globalStorage/zokugun.sync-settings/settings.yml   # nur ausführen, wenn nicht bereits z.B. in vorhergehendem Lauf gestartet/erstellt wurde
  become: true
  become_user: "{{ env_user }}"
  when:
    - ansible_distribution in ["Ubuntu"]

- name: Start 'Code - OSS' (Arch)
  tags: workstation,arch
  ansible.builtin.shell:
    cmd: code >/dev/null 2>&1 &  # damit im Home-Verzeichnis der Config-Pfad von VS Code erstellt wird + später die settings.yml dorthin kopiert werden kann
  args:
      creates: "/home/{{ env_user }}/.config/Code - OSS/User/globalStorage/zokugun.sync-settings/settings.yml"   # nur ausführen, wenn nicht bereits z.B. in vorhergehendem Lauf gestartet/erstellt wurde
  become: true
  become_user: "{{ env_user }}"
  when:
    - ansible_distribution in ["Archlinux"]

- name: Wait until 'Visual Studio Code' Extension 'Sync Settings' Standard Config-File is present before continuing (Ubuntu)
  ansible.builtin.wait_for:
    path: /home/{{ env_user }}/.config/Code/User/globalStorage/zokugun.sync-settings/settings.yml   #Datei
    #path: /home/{{ env_user }}/.config/Code/User/globalStorage/zokugun.sync-settings/               # Ordner
  when:
    - ansible_distribution == "Ubuntu"

## da sich die Extension unter Arch nicht so installieren lässt (s.o.) kann dies wegfallen:
#- name: Wait until 'Code - OSS' Extension 'Sync Settings' Standard Config-File is present before continuing (Arch)
#  ansible.builtin.wait_for:
#    path: "/home/{{ env_user }}/.config/Code - OSS/User/globalStorage/zokugun.sync-settings/settings.yml"   # Datei
#    #path: /home/{{ env_user }}/.config/Code/User/globalStorage/zokugun.sync-settings/               # Ordner
#  when:
#    - ansible_distribution == "Archlinux"

## da sich die Extension unter Arch nicht so installieren lässt: Verzeichnis der Extension manuell erstellen,
## damit unten die config-datei dorthin kopiert werden kann
- name: Erstelle hilfsweise manuell 'Sync Settings' Extension Ordner für 'Code - OSS' (Arch)
  tags: workstation,arch
  ansible.builtin.file:
    path: "/home/{{ env_user }}/.config/Code - OSS//User/globalStorage/zokugun.sync-settings"
    state: directory
    mode: '0775'
  become: true
  become_user: "{{ env_user }}"
  when:
    - ansible_distribution in ["Archlinux"]


#- name: Close Visual Studio Code (Ubuntu)
#  tags: workstation,ubuntu
#  ansible.builtin.shell:
#    cmd: pkill -15 code   # Signal: "-15" entspricht "SIGTERM" : Abschließen und beenden des Programms
#    #cmd: killall code
#  become: true
#  become_user: "{{ env_user }}"
#  when:
#    - ansible_distribution == "Ubuntu"

- name: Set/Copy 'Visual Studio Code' settings-file for Extension 'Sync Settings' (Ubuntu)
  tags: workstation,ubuntu
  ansible.builtin.copy:
    src: ./files/VSCode_Extension_Sync-Settings_settings.yml
    dest: /home/{{ env_user }}/.config/Code/User/globalStorage/zokugun.sync-settings/settings.yml   # Pfad bei Install des VS Code deb-Pakets (nicht bei flatpakod oder snap)
    owner: "{{ env_user }}"
    group: "{{ env_user }}"
    mode: u=rw
  when:
    - ansible_distribution == "Ubuntu"

- name: Set/Copy 'Code - OSS' settings-file for Extension 'Sync Settings' (Arch)
  tags: workstation,arch
  ansible.builtin.copy:
    src: ./files/VSCode_Extension_Sync-Settings_settings.yml
    dest: "/home/{{ env_user }}/.config/Code - OSS//User/globalStorage/zokugun.sync-settings/settings.yml"   # Pfad bei Install des VS Code deb-Pakets (nicht bei flatpakod oder snap)
    owner: "{{ env_user }}"
    group: "{{ env_user }}"
    mode: u=rw
  when:
    - ansible_distribution == "Archlinux"
