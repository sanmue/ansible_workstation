# ----------------------------------------
# Install from locally downloades packages
# ----------------------------------------

# #####################################
# ### Citrix Workspace App (ICA-Client)
# #####################################

- name: Local packages install - install Certificates for Citrix Workspace App (ICA-Client) from Mozilla cert-folder + pem-convert (Ubuntu)
  # requires installed Mozilla Firefox (was installed via a previous task)
  ansible.builtin.shell:
    # chdir: tasks/basic_all/
    # cmd: ./config_workstation-localPackageInstall-CitrixWorkspaceApp.sh
    cmd: chmod +x ./tasks/basic_all/config_workstation-localPackageInstall-CitrixWorkspaceApp.sh && ./tasks/basic_all/config_workstation-localPackageInstall-CitrixWorkspaceApp.sh
  when:
    - ansible_distribution == "Ubuntu"

- name: TODO - Download and install Citrix Workspace App + USB Support Package (Ubuntu)
  ansible.builtin.debug:
    msg: "TODO: download from 'https://www.citrix.com/downloads/workspace-app/linux/'"
  when:
    - ansible_distribution == "Ubuntu"


# ### Archlinux/Manjaro: ins bootstrap-script aufenommen

# - name: TODO - Local packages install - Download and install Citrix Workspace App (icaclient) from AUR (Arch)
#  ansible.builtin.debug:
#    msg: "TODO: Install from AUR: 'sudo pamac build --no-confirm icaclient'"
#  when:
#    - ansible_distribution == "Archlinux"

# - name: Local packages install - Download and install Citrix Workspace App (icaclient) from AUR (Archlinux)
#  ansible.builtin.shell:
#    cmd: "sudo pamac build --no-confirm icaclient && touch /home/{{ env_user }}/.ansible_pamac-icaclientInstalled"
#  args:
#    creates: "/home/{{ env_user }}/.ansible_pamac-icaclientInstalled"
#  when:
#    - ansible_distribution == "Archlinux"


# ######################
# ### Visual Studio Code
# ######################

- name: Local packages install - get stat /usr/bin/code (all)
  ansible.builtin.stat:
    path: /usr/bin/code
  register: usrbincode
  # when:
    # - ansible_distribution == "Ubuntu"

# - name: Local packages install - get stat /tmp/code.deb (all)
#  ansible.builtin.stat:
#    # path: /tmp/code.deb
#    path: "/home/{{ env_user }}/Downloads/code.deb"
#  register: tmpcodedeb
#  # when:
#    # - ansible_distribution == "Ubuntu"

# Download nach bootstrap.sh verschoben wg. timout
#
# - name: Local packages install - download Visual Studio Code deb-package (Ubuntu)
#  ansible.builtin.get_url:
#    url: "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64"
#    dest: "/home/{{ env_user }}/Downloads/code.deb"
#    # force_basic_auth: yes
#    force: false
#    mode: '0755'
#  when:
#    - ansible_distribution == "Ubuntu"
#    - (usrbincode.stat.exists == false) and (tmpcodedeb.stat.exists == false)

- name: Local packages install - install Visual Studio Code deb-package (Ubuntu, apt)
  tags: workstation,ubuntu,apt
  ansible.builtin.apt:
    deb: "/home/{{ env_user }}/Downloads/code.deb"
    only_upgrade: true
  when:
    - ansible_pkg_mgr == "apt"
    - ansible_distribution == "Ubuntu"
    - usrbincode.stat.exists == false


# #########
# ### Fonts
# #########

- name: Local packages install - create local font directory - systemwide (all)
  # https://wiki.archlinux.org/title/Fonts#Manual_installation
  # systemwide (all users): /usr/share/fonts/   # is under the purview of the package manager, and should not be modified manually
  # systemwide (all users): /usr/local/share/fonts/
  # for single user: ~/.local/share/fonts/
  ansible.builtin.file:
    path: /usr/local/share/fonts
    mode: '0755'
    state: directory
  # when:
  #   - ansible_distribution in ["Archlinux", "Ubuntu"]

# - name: Local packages install - Nerd Fonts - Meslo LG M Regular Complete Mono - systemwide (all)
# # https://github.com/ryanoasis/nerd-fonts#option-6-ad-hoc-curl-download
# # https://github.com/ryanoasis/nerd-fonts/releases
# # https://ostechnix.com/install-nerd-fonts-to-add-glyphs-in-your-code-on-linux/
# # https://askubuntu.com/questions/1384501/installing-custom-fonts-on-ubuntu-server
# # install systemwide: /usr/share/fonts/ or /usr/local/share/fonts/
# # install for user: ~/.local/share/fonts/
#  ansible.builtin.uri:
#    url: https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/Melso/M/Regular/complete/Meslo%20LG%20M%20Regular%20Nerd%20Font%20Complete%20Mono.ttf 
#    method: GET
#    follow_redirects: safe
#    # dest: "/usr/local/share/fonts/Meslo LG M Regular Nerd Font Complete Mono.ttf"
#    dest: /usr/local/share/fonts/
#    mode: '0644'
#    creates: "/usr/local/share/fonts/Meslo LG M Regular Nerd Font Complete Mono.ttf"
#  # register: result
#  when:
#    - ansible_distribution in ["Archlinux", "Ubuntu"]

- name: Local packages install - Nerd Fonts - Meslo LG M Regular Complete MONO - systemwide (all)
# https://github.com/ryanoasis/nerd-fonts#option-6-ad-hoc-curl-download
# https://github.com/ryanoasis/nerd-fonts/releases
# https://ostechnix.com/install-nerd-fonts-to-add-glyphs-in-your-code-on-linux/
# https://askubuntu.com/questions/1384501/installing-custom-fonts-on-ubuntu-server
# install systemwide: /usr/share/fonts/ or /usr/local/share/fonts/
# install for user: ~/.local/share/fonts/
  ansible.builtin.shell: sudo curl -fLo "Meslo LG M Regular Nerd Font Complete Mono.ttf" https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/Meslo/M/Regular/MesloLGMNerdFontMono-Regular.ttf
  args:
    chdir: /usr/local/share/fonts/
    creates: "/usr/local/share/fonts/Meslo LG M Regular Nerd Font Complete Mono.ttf"
  # when:
  #   - ansible_distribution in ["Archlinux", "Ubuntu"]

# - name: Local packages install - Nerd Fonts - Meslo LG M Regular Complete - systemwide (all)
#  ansible.builtin.uri:
#    url: https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/Melso/M/Regular/complete/Meslo%20LG%20M%20Regular%20Nerd%20Font%20Complete.ttf
#    method: GET
#    follow_redirects: safe
#    # dest: "/usr/local/share/fonts/Meslo LG M Regular Nerd Font Complete.ttf"
#    dest: "/usr/local/share/fonts/fonts/Meslo LG M Regular Nerd Font Complete.ttf"
#    mode: '0644'
#    creates: "/usr/local/share/fonts/Meslo LG M Regular Nerd Font Complete.ttf"
#  when:
#    - ansible_distribution in ["Archlinux", "Ubuntu"]

- name: Local packages install - Nerd Fonts - Meslo LG M Regular Complete - systemwide (all)
  ansible.builtin.shell: sudo curl -fLo "Meslo LG M Regular Nerd Font Complete.ttf" https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/Meslo/M/Regular/MesloLGMNerdFont-Regular.ttf
  args:
    chdir: /usr/local/share/fonts
    creates: "/usr/local/share/fonts/Meslo LG M Regular Nerd Font Complete.ttf"
  # when:
  #   - ansible_distribution in ["Archlinux", "Ubuntu"]

- name: Local packages install - Fonts - Build font information cache files for apps using fontconfig (all)
  ansible.builtin.shell: fc-cache -f
  # when:
  #   - ansible_distribution in ["Archlinux", "Ubuntu"]


# #########################
# ### starship shell prompt
# #########################

# download via curl in bootstrap.sh verschoben
# - name: Local packages install - starship shell prompt (env_user) - download install-file (all)
#  become: true
#  become_user: "{{ env_user }}"
#  ansible.builtin.uri:
#    url: 'https://starship.rs/install.sh'
#    method: GET
#    dest: "/home/{{ env_user }}/starship_install.sh"
#    owner: "{{ env_user }}"
#    group: "{{ env_user }}"
#    mode: '0755'
#    creates: "/home/{{ env_user }}/starship_install.sh"
#  # register: result
#  when:
#    - ansible_distribution in ["Archlinux", "Ubuntu"]
#    # - env_lsb_id != "ManjaroLinux"   # für bash in Manjaro, daher auskommentiert

- name: Local packages install - starship shell prompt (env_user) - check install status (all)
  ansible.builtin.stat:
    path: /usr/local/bin/starship
  register: starship
  # when:
  #   - ansible_distribution in ["Archlinux", "Ubuntu"]

- name: Local packages install - create dir usr-local-bin if not exists  (all)
  ansible.builtin.file:
    path: /usr/local/bin
    state: directory
    mode: '0755'
  # when:
  #   - ansible_distribution in ["Archlinux", "Ubuntu"]
  #   - starship.stat.exists == false

- name: Local packages install - starship shell prompt (env_user) - execute install-file (all)
  become: true
  become_user: "{{ env_user }}"
  ansible.builtin.shell: "/home/{{ env_user }}/starship_install.sh --yes"
  when:
    # - ansible_distribution in ["Archlinux", "Ubuntu"]
    - starship.stat.exists == false
    # - env_lsb_id != "ManjaroLinux"   # für bash in Manjaro, daher auskommentiert
# config: in config_all-settingsmisc.yml; update: systemd timer
# https://starship.rs/


# ###############################
# ### zsh plugins - from git repo
# ###############################
# Anm.: bei Archlinux über paket, bei Manjaro schon von werk aus vorhanden

- name: Local packages install - install zsh plugin - zsh-autosuggestions (Ubuntu,Suse)
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: /usr/share/zsh/plugins/zsh-autosuggestions
    clone: true
    update: true
  when: ansible_distribution in ["Ubuntu"] or
        ansible_os_family == "Suse"

- name: Local packages install - install zsh plugin - zsh-syntax-highlighting (Ubuntu,Suse)
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: /usr/share/zsh/plugins/zsh-syntax-highlighting
    clone: true
    update: true
  when: ansible_distribution in ["Ubuntu"] or
        ansible_os_family == "Suse"

- name: Local packages install - install zsh plugin - zsh-history-substring-search (Ubuntu,Suse)
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-history-substring-search.git
    dest: /usr/share/zsh/plugins/zsh-history-substring-search
    clone: true
    update: true
  when: ansible_distribution in ["Ubuntu"] or
        ansible_os_family == "Suse"
