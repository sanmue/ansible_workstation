
#######################
### Disable Ubuntu dock
#######################
# Annahme: gnome extension "dash to dock" wurde installiert
#- name: disable Ubuntu dock (Ubuntu + Gnome)
#  tags: gnome
#  command: gnome-extensions disable ubuntu-dock@ubuntu.com
#  when:
#    - env_desktop == "ubuntu:gnome"

## alternativ:
#- name: set gnome shell disabled-extensions - ubuntu-dock (Ubuntu + Gnome)
##  become_user: "{{ env_user }}"
#  dconf:
#    key: "/org/gnome/shell/disabled-extensions"
#    value: "['ubuntu-dock@ubuntu.com']"
#  when:
#    - env_desktop in ["ubuntu:gnome"]



#################
### favorite apps
#################
# Unterscheidung noch nach Distro + Desktopenvirongment
# da aktuell teilw. unterschiedliche Softwarequllen (Snap,Faltpak,Repo) und unterschiedliche Bezeichungen je Distro

### Ubuntu + Gnome ###
- name: adding favorite apps to dock (Ubuntu + Gnome)
# flatpak, snaps: whalebird
#  command: gsettings set org.gnome.shell favorite-apps "['org.keepassxc.KeePassXC.desktop', 'firefox.desktop', 'org.gnome.Epiphany.desktop', 'org.chromium.Chromium.desktop', 'vivaldi-stable.desktop', 'org.gnome.Terminal.desktop', 'terminator.desktop', 'nemo.desktop', 'org.gnome.gedit.desktop', 'io.atom.Atom.desktop', 'org.libreoffice.LibreOffice.desktop', 'org.gnome.Evolution.desktop', 'net.cozic.joplin_desktop.desktop', 'de.willuhn.Jameica.desktop', 'rhythmbox.desktop', 'whalebird_whalebird.desktop', 'org.signal.Signal.desktop', 'com.discordapp.Discord.desktop', 'org.remmina.Remmina.desktop', 'virt-manager.desktop', 'snap-store_ubuntu-software.desktop']"
### snap-store_ubuntu-software.desktop -> vorg.gnome.Software.desktop:
#  command: gsettings set org.gnome.shell favorite-apps "['com.belmoussaoui.Authenticator.desktop', 'org.keepassxc.KeePassXC.desktop', 'firefox.desktop', 'org.chromium.Chromium.desktop', 'org.gnome.Epiphany.desktop', 'org.gnome.Evolution.desktop', 'org.gnome.Terminal.desktop', 'terminator.desktop', 'nemo.desktop', 'org.gnome.gedit.desktop', 'io.atom.Atom.desktop', 'org.libreoffice.LibreOffice.desktop', 'anki.desktop', 'net.cozic.joplin_desktop.desktop', 'org.qownnotes.QOwnNotes.desktop', 'de.willuhn.Jameica.desktop', 'rhythmbox.desktop', 'de.haeckerfelix.Shortwave.desktop', 'org.signal.Signal.desktop', 'whalebird_whalebird.desktop', 'com.discordapp.Discord.desktop', 'org.remmina.Remmina.desktop', 'virt-manager.desktop', 'org.gnome.Software.desktop']"
# snaps, flatpak: jameica
#  command: gsettings set org.gnome.shell favorite-apps "['org.keepassxc.KeePassXC.desktop', 'firefox.desktop', 'vivaldi-stable.desktop', 'chromium_chromium.desktop', 'thunderbird_thunderbird.desktop', 'org.gnome.gedit.desktop', 'libreoffice_libreoffice.desktop', 'joplin-james-carroll_joplin.desktop', 'de.willuhn.Jameica.desktop', 'rhythmbox.desktop', 'whalebird_whalebird.desktop', 'signal-desktop_signal-desktop.desktop', 'discord_discord.desktop', 'nemo.desktop', 'org.gnome.Terminal.desktop', 'terminator.desktop', 'virt-manager.desktop', 'org.remmina.Remmina.desktop', 'snap-store_ubuntu-software.desktop']"
  command: gsettings set org.gnome.shell favorite-apps "['com.belmoussaoui.Authenticator.desktop', 'org.keepassxc.KeePassXC.desktop', 'firefox.desktop', 'firefox-esr.desktop', 'org.chromium.Chromium.desktop', 'brave-browser.desktop', 'org.gnome.Epiphany.desktop', 'org.gnome.Evolution.desktop', 'org.gnome.Terminal.desktop', 'nemo.desktop', 'org.gnome.gedit.desktop', 'org.libreoffice.LibreOffice.desktop', 'code_code.desktop', 'anki.desktop', 'net.cozic.joplin_desktop.desktop', 'de.willuhn.Jameica.desktop', 'rhythmbox.desktop', 'de.haeckerfelix.Shortwave.desktop', 'org.signal.Signal.desktop', 'teams.desktop', 'org.remmina.Remmina.desktop', 'virt-manager.desktop']"
  when:
    - env_desktop == "ubuntu:gnome"

### Manjaro + Gnome ###
- name: adding favorite apps to dock (Manjaro + Gnome)
  command: gsettings set org.gnome.shell favorite-apps "['com.belmoussaoui.Authenticator.desktop', 'org.keepassxc.KeePassXC.desktop', 'firefox.desktop', 'chromium.desktop', 'org.gnome.Terminal.desktop', 'terminator.desktop', 'nemo.desktop', 'org.gnome.gedit.desktop', 'libreoffice-startcenter.desktop', 'anki.desktop', 'net.cozic.joplin_desktop.desktop', 'de.willuhn.Jameica.desktop', 'rhythmbox.desktop', 'de.haeckerfelix.Shortwave.desktop', 'signal-desktop.desktop', 'discord.desktop', 'whalebird_whalebird.desktop', 'org.remmina.Remmina.desktop', 'virt-manager.desktop', 'gnome-control-center.desktop', 'org.manjaro.pamac.manager.desktop']"
  when:
    - ansible_distribution == "Archlinux"
    - env_desktop == "gnome"

### Suse + Gnome ###
- name: adding favorite apps to dock (Suse + Gnome)
  command: gsettings set org.gnome.shell favorite-apps "['com.belmoussaoui.Authenticator.desktop', 'org.keepassxc.KeePassXC.desktop', 'firefox.desktop', 'org.gnome.Epiphany.desktop', 'chromium-browser.desktop', 'org.gnome.Terminal.desktop', 'terminator.desktop', 'nemo.desktop', 'org.gnome.gedit.desktop', 'io.atom.Atom.desktop', 'org.gnome.Evolution.desktop', 'startcenter.desktop', 'anki.desktop', 'net.cozic.joplin_desktop.desktop', 'de.willuhn.Jameica.desktop', 'org.signal.Signal.desktop', 'discord.desktop', 'whalebird_whalebird.desktop', 'rhythmbox.desktop', 'de.haeckerfelix.Shortwave.desktop', 'org.remmina.Remmina.desktop', 'virt-manager.desktop', 'org.gnome.Software.desktop', 'org.opensuse.YaST.desktop']"
  when:
    - ansible_os_family == "Suse"
    - env_desktop == "gnome"



######################
### desktop-background
######################

### Ubuntu + Gnome ###
- name: create a directory for desktop-wallpaper in local user-folder (Ubuntu + Gnome)
#  become_user: sandro
  ansible.builtin.file:
    path: "/home/{{ env_user }}/.local/share/backgrounds"
    state: directory
#    mode: '0755'
  when:
    - env_desktop in ["ubuntu:gnome"]

- name: copy desktop-wallpaper file to local user-folder (Ubuntu + Gnome)
#  become_user: sandro
  copy:
#    src: "files/gnome/background/gnome_embos_1440P.png"
    src: "files/gnome/background/brad-huchteman-stone-mountain.jpg"
#    dest: "/home/{{ env_user }}/.local/share/backgrounds/gnome_emboss_1440P.png"
    dest: "/home/{{ env_user }}/.local/share/backgrounds/brad-huchteman-stone-mountain.jpg"
    remote_src: yes
    owner: "{{ env_user }}"
    group: "{{ env_user }}"
    mode: u=rwx,g=rwx,o=rwx
#    mode: 0777
  when:
    - env_desktop == "ubuntu:gnome"

- name: set desktop - background (Ubuntu + Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/background/picture-uri"
#    value: "'file:///home/USERNAME/.local/share/backgrounds/gnome_emboss_1440P.png'" # fix
#    value: '"file:///home/{{ env_user }}/.local/share/backgrounds/gnome_emboss_1440P.png"' # dyn
    value: '"file:///home/{{ env_user }}/.local/share/backgrounds/brad-huchteman-stone-mountain.jpg"' # dyn
#    state: present # standard
  when:
    - env_desktop == "ubuntu:gnome"

- name: set desktop - background (Ubuntu + Gnome dark)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/background/picture-uri-dark"
    value: '"file:///home/{{ env_user }}/.local/share/backgrounds/brad-huchteman-stone-mountain.jpg"' # dyn
#    state: present # standard
  when:
    - env_desktop == "ubuntu:gnome"


- name: set desktop-wallpaper picture-options (Ubuntu + Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/background/picture-options"
    value: "'zoom'"
  when:
    - env_desktop == "ubuntu:gnome"

- name: set show-desktop-icons (Ubuntu + Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/background/show-desktop-icons"
    value: "false"
  when:
    - env_desktop == "ubuntu:gnome"



### Suse + Gnome ###
- name: copy desktop-wallpaper file to local system-folder (Suse + Gnome)
#  become_user: sandro
  become: true
  copy:
    src: "files/gnome/background/gnome_embos_1440P.png"
    dest: /usr/share/wallpapers/ # systemweit verf√ºgbar
#    dest: "/home/{{ env_user }}/Bilder/"
    remote_src: yes
    owner: root
    group: root
    mode: u=rwx,g=rwx,o=rwx
#    mode: 0777
  when:
    - ansible_os_family == "Suse"
    - env_desktop == "gnome"

- name: set desktop - background (Suse + Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/background/picture-uri"
    value: "'file:///usr/share/wallpapers/gnome_embos_1440P.png'"
  when:
    - ansible_os_family == "Suse"
    - env_desktop == "gnome"

- name: set desktop-wallpaper picture-options (Suse + Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/background/picture-options"
    value: "'zoom'"
  when:
    - ansible_os_family == "Suse"
    - env_desktop == "gnome"



############################
### weitere desktop settings
### ------------------------
- name: set desktop interface - clock-format (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/interface/clock-format"
    value: "'24h'"
  when:
#    - ansible_os_family == "Suse"
#    - env_desktop == "gnome"
    - env_desktop in ["gnome", "ubuntu:gnome"]


- name: set desktop interface - clock-show-date (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/interface/clock-show-date"
    value: "true"
  when:
#    - ansible_os_family == "Suse"
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop interface - clock-show-weekday (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/interface/clock-show-weekday"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### Appearance
- name: set desktop interface - color-sheme - dark (Gnome)
  dconf:
    key: "/org/gnome/desktop/interface/color-scheme"
    value: "'prefer-dark'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### gtk-theme ###

# all

#- name: create a directory for gtk-theme files in userdir (all + Gnome)
##  become_user: sandro
#  ansible.builtin.file:
#    path: "/home/{{ env_user }}/.themes"
#    state: directory
##    mode: '0755'
#  when:
##    - ansible_os_family == "Suse"
#    - env_desktop in ["gnome","ubuntu:gnome"]


#- name: copy gtk-theme MateriaBreath-dark to userdir (all + Gnome)
##  become_user: sandro
#  unarchive:
#    src: "files/gnome/themes/MateriaBreath.zip"
#    dest: "/home/{{ env_user }}/.themes/"
#    creates: "/home/{{ env_user }}/.themes/MateriaBreath-dark" # creates unterst√ºtzt keine tilde
#    remote_src: yes
#    keep_newer: yes
##    owner: sandro
##    group: users # Suse
##    group: sandro # Ubuntu/Debian
##    mode: u=rwx,g=rwx,o=rwx
#  when:
##    - ansible_os_family == "Suse"
#    - env_desktop in ["gnome","ubuntu:gnome"]

#- name: copy gtk-theme Ultimate-Dark-(Flat)-Green to userdir (all + Gnome)
##  become_user: sandro
#  unarchive:
#    src: "files/gnome/themes/Ultimate-Dark-(Flat)-Green.zip"
#    dest: "/home/{{ env_user }}/.themes/"
#    creates: /home/"{{ env_user }}"/.themes/Ultimate-Dark-(Flat)-Green # creates unterst√ºtzt keine tilde
#    remote_src: yes
#    keep_newer: yes
##    owner: sandro
##    group: users # suse
##    group: sandro # ubuntu, debian
##    mode: u=rwx,g=rwx,o=rwx
#  when:
##    - ansible_os_family == "Suse"
#    - env_desktop in ["gnome","ubuntu:gnome"]



##- name: set desktop interface - gtk-theme MateriaBreath-dark (all + Gnome)
## bei theme "MateriaBreath-dark" sind die Optionsk√§stchenen + H√§kchen nicht zu sehen
- name: set desktop interface - gtk-theme (all + Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/interface/gtk-theme"
#    value: "'Adwaita-dark'"
    value: "'Yaru-prussiangreen-dark'"
  when:
    - env_desktop in ["gnome","ubuntu:gnome"]


# Suse  -'Adwaita-dark'
#- name: set desktop interface - gtk-theme (Suse + Gnome)
##  become_user: sandro
#  dconf:
#    key: "/org/gnome/desktop/interface/gtk-theme"
#    value: "'Adwaita-dark'"
#  when:
#    - ansible_os_family == "Suse"
#    - env_desktop == "gnome"


### icon-theme ###

# all

#- name: create a directory for icon-theme files in userdir (all + Gnome)
##  become_user: sandro
#  ansible.builtin.file:
#    path: "/home/{{ env_user }}/.icons"
#    state: directory
##    mode: '0755'
#  when:
##    - ansible_os_family == "Suse"
#    - env_desktop in ["gnome","ubuntu:gnome"]


#- name: copy icon-theme Materia-Manjaro-Dark-2 to userdir (all + Gnome)
##  become_user: sandro
#  unarchive:
#    src: "files/gnome/icons/Materia-Manjaro-Dark-2.zip"
#    dest: "/home/{{ env_user }}/.icons/"
#    creates: /home/"{{ env_user }}"/.icons/Materia-Manjaro-Dark-2 # creates unterst√ºtzt keine tilde
#    remote_src: yes
#    keep_newer: yes
##    owner: sandro
##    group: users # suse
##    group: sandro # ubuntu, debian
##    mode: u=rwx,g=rwx,o=rwx
#  when:
##    - ansible_os_family == "Suse"
#    - env_desktop in ["gnome","ubuntu:gnome"]



#- name: set desktop interface - icon-theme Materia-Manjaro-Dark-2 (Gnome)
- name: set desktop interface - icon-theme (Gnome)
#  become_user: sandro
  dconf:
#    key: "/org/gnome/desktop/interface/icon-theme"
#    value: "'Materia-Manjaro-Dark-2'"
    key: "/org/gnome/desktop/interface/icon-theme"
    value: "'Yaru-prussiangreen'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### Desktop interface, calendar, sceensaver, ...:
- name: set desktop interface - show-battery-percentage (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/interface/show-battery-percentage"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop interface - locate-pointer (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/interface/locate-pointer"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop calendar - show-weekdate in calendar (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/calendar/show-weekdate"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop input-sources - show-all-sources (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/input-sources/show-all-sources"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop screensaver - idle-activation-enabled (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/screensaver/idle-activation-enabled"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop screensaver - lock-enabled (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/screensaver/lock-enabled"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop screensaver - lock-delay (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/screensaver/lock-delay"
    value: "'0'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set desktop wm preferences - button-layout (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/desktop/wm/preferences/button-layout"
    value: "'appmenu:minimize,maximize,close'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### power settings:
#   ---------------
- name: set settings-daemon - plugin - power - power-button-action (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/settings-daemon/plugins/power/power-button-action"
    value: "'nothing'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set settings-daemon - plugin - power - sleep-inactive-ac-type (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type"
    value: "'nothing'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set settings-daemon - plugin - power - sleep-inactive-battery-type (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-battery-type"
    value: "'nothing'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### set Display - Night Light
- name: set settings-daemon - plugin - color - night-light-enabled (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/settings-daemon/plugins/color/night-light-enabled"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### set Keyboard Shortcuts
# Settings - Keyboard - Keyboard Shortcuts
- name: set settings-daemon - plugin - media-keys - control-center (Gnome)
  dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/control-center"
    value: "['<Primary><Alt>p']"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set settings-daemon - plugin - media-keys - email (Gnome)
  dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/email"
    value: "['<Primary><Alt>q']"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set settings-daemon - plugin - media-keys - www (Gnome)
  dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/www"
    value: "['<Primary><Alt>w']"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

# set custom Keyboard Shortcuts:
#
#- name: set settings-daemon - plugin - media-keys - custom-keybindings (Part 1) (Gnome)
#  dconf:
#    key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"
#    value: "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom4/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom5/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom7/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom8/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom9/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom10/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom11/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom12/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom6/']"
#  when:
#    - env_desktop in ["gnome", "ubuntu:gnome"]

#- name: set settings-daemon - plugin - media-keys - custom-keybindings (Part 2), create key (Gnome)
#  ansible.builtin.command: "dconf write /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/"
#  args:
#    creates: "/home/{{ env_user }}/.ansibleCustomKeybindingsSet"
#  when:
#    - env_desktop in ["gnome", "ubuntu:gnome"]

#- name: set settings-daemon - plugin - media-keys - custom-keybindings (Part 3),import from file (Gnome)
#  ansible.builtin.command: "dconf load /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/ < {{ env_PWD }}/files/dconfDump_mediaKeys-customKeybindings.txt"
#  when:
#    - env_desktop in ["gnome", "ubuntu:gnome"]


- name: set settings-daemon - plugin - media-keys - chromium,name (Gnome)
  dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/name"
    value: "'Chromium'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set settings-daemon - plugin - media-keys - chromium,command(Gnome)
  dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/command"
    value: "'flatpak run org.chromium.Chromium'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set settings-daemon - plugin - media-keys - chromium,binding (Gnome)
  dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/binding"
    value: "'<Primary><Alt>c'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

# set/create list for custom-keybindings
- name: set settings-daemon - plugin - media-keys - custom-keybindings,Listeintrag(Gnome)
  dconf:
    key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"
#    value: "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom4/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom5/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom7/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom8/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom9/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom10/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom11/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom12/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom6/']"
    value: "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]




### Gnome Weather:
#   -------------
#- name: set gnome  - Weather automatic-location (Gnome)
##  become_user: sandro
#  dconf:
#    key: "/org/gnome/Weather/automatic-location"
#    value: "false"
#  when:
##    - ansible_os_family == "Suse"
#    - env_desktop == "gnome"

#- name: set gnome  - Weather locations (Gnome)
##  become_user: sandro
#  dconf:
#    key: "/org/gnome/Weather/locations"
#    value: "[<(uint32 2, <('Niederkirchen, Saarland', '', false, [(0.86339344922787564, 0.12656180196211969)], [(0.863065315111196, 0.13148146449914197)])>)>]"
#  when:
##    - ansible_os_family == "Suse"
#    - env_desktop == "gnome"



### nemo filebrowser -  preferences:
#   --------------------------------
- name: set nemo preferences - click-policy (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/click-policy"
    value: "'double'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-computer-icon-toolbar (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-computer-icon-toolbar"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-home-icon-toolbar (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-home-icon-toolbar"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-list-view-icon-toolbar (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-list-view-icon-toolbar"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-location-entry (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-location-entry"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-new-folder-icon-toolbar (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-new-folder-icon-toolbar"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-open-in-terminal-toolbar ((Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-open-in-terminal-toolbar"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-reload-icon-toolbar (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-reload-icon-toolbar"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set nemo preferences - show-show-thumbnails-toolbar (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/nemo/preferences/show-show-thumbnails-toolbar"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### gedit -  preferences:
#   ---------------------
- name: set gedit preferences - scheme (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/gedit/preferences/editor/scheme"
    value: "'solarized-dark'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### gnome terminal - profiles and preferences:
#   ------------------------------------------
- name: set gnome terminal - profiles and preferences (Gnome, Ansible <2.10)
##  become_user: sandro
##
  script: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh" # funktioniert; ansible version 2.9
##  ansible.builtin.script: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh" # ab ansible version 2.10
##  ansible.builtin.script:  # ab ansible version 2.10
##    cmd: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh"
##
##  command: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh" # funktioniert; ansible version 2.9
##  ansible.builtin.command: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh" # ab ansible version 2.10
##  ansible.builtin.command: # ab ansible version 2.10
##    cmd: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh"
## The command(s) will not be processed through the shell, so variables like $HOME and operations like "<", ">", "|", ";" and "&" will not work. Use the shell module if you need these features.
##
##  shell: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh" # funktioniert; ansible version 2.9
##  ansible.builtin.shell: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh" # ab ansible version 2.10
  args:
    creates: "/home/{{ env_user }}/.ansibleTerminalProfileSet"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]
##    - "ansible_version.major is version('2', '=')"
##    - "ansible_version.minor is version('9', '<=')"
    - "ansible_version.full is version('2.10.0', '<')"

- name: set gnome terminal - profiles and preferences (Gnome, Ansible >=2.10)
##  become_user: sandro
##
  ansible.builtin.script: "{{ env_PWD }}/tasks/config_workstation-desktopPreferences-terminal.sh" # ab ansible version 2.10
  args:
    creates: "/home/{{ env_user }}/.ansibleTerminalProfileSet"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]
    - "ansible_version.full is version('2.10.0', '>=')"


- name: create flag - file .ansibleTerminalProfileSet (Gnome)
  file:
    path: "/home/{{ env_user }}/.ansibleTerminalProfileSet"
    state: touch
    mode: u=rw,g=r,o=r
    modification_time: preserve
    access_time: preserve
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



### gnome shell extensions -  preferences:
#   --------------------------------------

# ### ding
# https://ubuntuhandbook.org/index.php/2022/03/show-trash-ubuntu-2204-desktop/
- name: set gnome shell extensions - ding - show-home (Gnome)
# Settings - Appearance - Desktop Icons - Show Personal folder
  dconf:
    key: "/org/gnome/shell/extensions/ding/show-home"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - ding - start-corner (Gnome)
  # Settings - Appearance - Desktop Icons - Position of New Icons
  dconf:
    key: "/org/gnome/shell/extensions/ding/start-corner"
    value: "'top-left'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]




### Dash to Dock:
- name: set gnome shell extensions - dash-to-dock - custom-theme-shrink (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/custom-theme-shrink"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - height-fraction (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/height-fraction"
    value: "'0.94999999999999996'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - isolate-workspaces (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/isolate-workspaces"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - multi-monitor" (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/multi-monitor"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - running-indicator-style" (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/running-indicator-style"
    value: "'DEFAULT'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - scroll-action" (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/scroll-action"
    value: "'switch-workspace'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - show-mounts (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/show-mounts"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - show-trash (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/show-trash"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - dock-fixed (Gnome)
# Appearence - Dock - Auot-hide the Dock: enable
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/dock-fixed"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - extend-height (Gnome)
# Appearence - Dock - Panel mode: enable
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/extend-height"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - dash-max-icon-size (Gnome)
# Appearence - Dock - Icon Size
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/dash-max-icon-size"
    value: "32"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - dash-to-dock - multi-monitor (Gnome)
# Appearence - Dock - Show on: All Displays
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/dash-to-dock/multi-monitor "
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]


### openweather:
- name: set gnome shell extensions - openweather - city (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/city"
    value: "'49.4641816,7.2484007>Niederkirchen, Kuseler Stra√üe, Saal, Niederkirchen, Sankt Wendel, Landkreis St. Wendel, Saarland, 66606, Deutschland >-1 && 49.49342345,6.828330133618561>Nunkirchen, Wadern, Landkreis Merzig-Wadern, Saarland, Deutschland >-1'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - openweather - actual-city" (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/actual-city"
    value: "1"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - openweather - days-forecast (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/days-forecast"
    value: "4"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - openweather - menu-alignment (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/menu-alignment"
    value: "80.099999999999994"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - openweather - position-in-panel (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/position-in-panel"
    value: "'center'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - openweather - pressure-unit (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/pressure-unit"
    value: "'hPa'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - openweather - unit (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/unit"
    value: "'celsius'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome shell extensions - openweather - wind-speed-unit (Gnome)
#  become_user: sandro
  dconf:
    key: "/org/gnome/shell/extensions/openweather/wind-speed-unit"
    value: "'kph'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



###############################################
# TODO: GNOME Shell Apps Dashboard - Categories
###############################################
#
# https://specifications.freedesktop.org/menu-spec/menu-spec-latest.html
# A. Registered Categories
#
# https://github.com/BenJetson/gnome-dash-fix
# https://www.gauthampdas.com/blog/tech/linux/enabling-categories-in-gnome-3-8-shell-application-menu#
#
# dconf editor: /org/gnome/desktop/app-folders/folder-children

#- name: GNOME Shell Apps Dashboard - Categories (Suse + Gnome)
#  command: gsettings set org.gnome.desktop.app-folders folder-children "['AudioVideo', 'Development', 'Education', 'Game', 'Graphics', 'Network', 'Office', 'Science', 'Settings', 'System', 'Utility']"
#  when:
#    - ansible_os_family == "Suse"
#    - env_desktop == "gnome"



# ################################
# ### Gnome Epiphany (Web Browser)
- name: set gnome - epiphany - aks-for-default (Gnome)
  dconf:
    key: "/org/gnome/epiphany/ask-for-default"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - epiphany - default-search-engine (Gnome)
  dconf:
    key: "/org/gnome/epiphany/default-search-engine"
    value: "'DuckDuckGo'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - epiphany - reader - color-scheme (Gnome)
  dconf:
    key: "/org/gnome/epiphany/reader/color-scheme"
    value: "'dark'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - epiphany - web - remember-passwords (Gnome)
  dconf:
    key: "/org/gnome/epiphany/web/remember-passwords"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]



# ##########################
# ### Gnome Evolution (Mail)
- name: set gnome - evolution - calendar - classify-private (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/classify-private"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - compress-weekend (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/compress-weekend"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - day-end-hour (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/day-end-hour"
    value: "16"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - day-start-hour (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/day-start-hour"
    value: "7"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - editor-show-timezone (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/editor-show-timezone"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - prefer-new-item (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/prefer-new-item"
    value: "'event-new'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - primary-memos (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/primary-memos"
    value: "'system-memo-list'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - show-icons-month-view (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/show-icons-month-view"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - show-week-numbers (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/show-week-numbers"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - calendar - show-week-numbers (Gnome)
  dconf:
    key: "/org/gnome/evolution/calendar/use-24hour-format"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - browser-close-on-reply-policy (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/browser-close-on-reply-policy"
    value: "'never'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - composer-delay-outbox-flush (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/composer-delay-outbox-flush"
    value: "0"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - composer-show-bcc (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/composer-show-bcc"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - composer-spell-languages (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/composer-spell-languages"
    value: "['de_DE']"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - composer-top-signature (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/composer-top-signature"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - forward-style-name (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/forward-style-name"
    value: "'inline'"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - layout (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/layout"
    value: "1"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - mark-seen (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/mark-seen"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - show-sender-photo (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/show-sender-photo"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - show-to-do-bar (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/show-to-do-bar"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - show-to-do-bar-sub (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/show-to-do-bar-sub"
    value: "false"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]

- name: set gnome - evolution - mail - to-do-bar-show-no-duedate-tasks (Gnome)
  dconf:
    key: "/org/gnome/evolution/mail/to-do-bar-show-no-duedate-tasks"
    value: "true"
  when:
    - env_desktop in ["gnome", "ubuntu:gnome"]
