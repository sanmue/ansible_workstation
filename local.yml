---

- hosts: localhost
  connection: local
  become: no
  tags: always,pre,ansibleFacts
  gather_facts: true
  pre_tasks:
  - include: tasks/basic_all/config_workstation-ansibleFactsVariables.yml


- hosts: localhost
  connection: local
  become: true
  tags: always,pre
  pre_tasks:
  - include: tasks/basic_all/config_workstation-addrepos.yml
  - include: tasks/basic_all/all_update.yml


- hosts: localhost
  connection: local
  become: true
  tags: always
  tasks:
  # ### Entferne nicht benötigter, pre-installed packages:
  - include: tasks/Gnome/packages_workstation-Gnome-remove-PreInstalls.yml
  - include: tasks/PlasmaKDE/packages_workstation-PlasmaKDE-remove-PreInstalls.yml
  # ----------------------------------------------------------
  # ### Installation Software-Packages (inklusive snap + flatpak):
    # - repo
  - include: tasks/basic_all/packages_workstation-basic.yml
  - include: tasks/Gnome/packages_workstation-Gnome.yml
  - include: tasks/PlasmaKDE/packages_workstation-PlasmaKDE.yml
    # - gnomeshell
  - include: tasks/Gnome/packages_workstation-gnomeshellstuff.yml
    # - flatpak
  - include: tasks/flatpakSnap/config_workstation-flatpak.yml
  - include: tasks/flatpakSnap/packages_workstation-flatpak.yml
    # - snap
  - include: tasks/flatpakSnap/config_workstation-snap.yml
  - include: tasks/flatpakSnappackages_workstation-snap.yml
  # ----------------------------------------------------------
  # ### Suse - Multimedia:
  #  - include: tasks/basic_all/config_workstation-addrepos-suseMultimedia.yml
  - include: tasks/basic_all/packages_workstation-suseMultimedia.yml
  # ----------------------------------------------------------
  # ### Installation lokal heruntergeladener Pakete:
  - include: tasks/basic_all/packages_workstation-localPackageInstall.yml
  # ----------------------------------------------------------
  # ### Config Firewall und Services:
  - include: tasks/config_all-firewall.yml
  - include: tasks/config_workstation-firewall.yml
  - include: tasks/config_all-services-misc.yml
  - include: tasks/config_all-settings-misc.yml
# ----------------------------------------------------------
# ### Virtualisierung:
  - include: tasks/packages_workstation-VM-QemuKvm.yml
  - include: tasks/config_all-VM-daemon.yml
  - include: tasks/config_all-VM-users.yml
  - include: tasks/config_all-VM-QemuKvm-create.yml
# ----------------------------------------------------------
# ### sudo-ansible-user + cronjob:
#  - include: tasks/config_all-ansible-users.yml
#  - include: tasks/config_all-cron.yml
# ----------------------------------------------------------
# ### cleanup:
  - include: tasks/all_cleanup.yml


- hosts: localhost
  connection: local
  become_user: "{{ env_user }}"
#  become: false
  tags: always,gnome
  tasks:
#  - include: tasks/packages_workstation-gnomeshellExtensions.yml
#  - include: tasks/config_workstation-gnomeshellExtension.yml
  - include: tasks/config_workstation-desktopPreferences.yml

  - debug:
      msg: "Please restart the system for the changes to take effect!"


#- hosts: localhost
#  connection: local
#  become: true
#  tags: always,reboot
#  tasks:
#  - include: tasks/all_reboot.yml # da hier local/pull --> geht nicht
# fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 0, "msg": "Running reboot with local connection would reboot the control node.", "rebooted": false}

### "all_reboot.yml" geändert auf ansible.builtin.shell, cmd: reboot
### (und damit nicht mehr reboot über ansible-Modul (s.o.))
#- hosts: localhost
#  connection: local
#  become: true
#  tags: always,reboot
#  tasks:
#  - include: tasks/all_reboot.yml
