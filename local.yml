---

- name: Gather Facts and Variables
  hosts: localhost
  connection: local
  become: false
  gather_facts: true
  pre_tasks:
    - name: Pre Tasks - Gather Facts and Variables
      ansible.builtin.import_tasks: tasks/basic_all/config_workstation-ansibleFacts.yml


- name: Config + fix repos + update
  hosts: localhost
  connection: local
  become: true
  pre_tasks:
    - name: Pre Tasks - Config + fix repos + update
      ansible.builtin.import_tasks: tasks/basic_all/config_workstation-addrepos.yml
    - name: Pre Tasks - Fix config_workstation-addrepos-ubuntu-fix
      ansible.builtin.import_tasks: tasks/fix/config_workstation-addrepos-ubuntu-fix.yml
    - name: Pre Tasks - all update
      ansible.builtin.import_tasks: tasks/basic_all/all_update.yml


- name: Software, Firewall, Servcices, VM, User, Settings
  hosts: localhost
  connection: local
  become: true
  tasks:
    # ----------------------------------------------------------
    # ### Entfernen nicht benötigter vorinstallierter Pakete
    - name: Entfernen nicht benötigter vorinstallierter Pakete (Gnome)
      ansible.builtin.import_tasks: tasks/Desktop_Gnome/packages_workstation-Gnome-removePreInstalls.yml
    - name: Entfernen nicht benötigter vorinstallierter Pakete (Plasma)
      ansible.builtin.import_tasks: tasks/Desktop_Plasma/packages_workstation-Plasma-removePreInstalls.yml
    # ----------------------------------------------------------
    # ### Installation Software-Packages
    # - repo:
    - name: Basic packages
      ansible.builtin.import_tasks: tasks/basic_all/packages_workstation-basic.yml
    - name: Packages Plasma
      ansible.builtin.import_tasks: tasks/Desktop_Plasma/packages_workstation-Plasma.yml
    - name: Packages Gnome
      ansible.builtin.import_tasks: tasks/Desktop_Gnome/packages_workstation-Gnome.yml
    - name: Packages Gnomeshell
      ansible.builtin.import_tasks: tasks/Desktop_Gnome/packages_workstation-gnomeshellstuff.yml
    # - flatpak:
    - name: Config Flatpak
      ansible.builtin.import_tasks: tasks/flatpakSnap/config_workstation-flatpak.yml
    - name: Packages Flatpak
      ansible.builtin.import_tasks: tasks/flatpakSnap/packages_workstation-flatpak.yml
    # - snap:
    - name: Config Snap
      ansible.builtin.import_tasks: tasks/flatpakSnap/config_workstation-snap.yml
    - name: Packages Snap
      ansible.builtin.import_tasks: tasks/flatpakSnap/packages_workstation-snap.yml
    # - lokal heruntergeladene Pakete:
    - name: Install local packages
      ansible.builtin.import_tasks: tasks/basic_all/packages_workstation-localPackageInstall.yml
    # ----------------------------------------------------------
    # ### Config Firewall, Services, sonstige Settings:
    - name: Config Firewall all
      ansible.builtin.import_tasks: tasks/basic_all/config_all-firewall.yml
    - name: Config Firewall workstation
      ansible.builtin.import_tasks: tasks/basic_all/config_workstation-firewall.yml
    - name: Config Services all
      ansible.builtin.import_tasks: tasks/basic_all/config_all-services-misc.yml
    - name: Config Settings all misc
      ansible.builtin.import_tasks: tasks/basic_all/config_all-settings-misc.yml
    # ----------------------------------------------------------
    # ### Virtualisierung:
    - name: VM - Qeumu KVM
      ansible.builtin.import_tasks: tasks/VM/packages_workstation-VM-QemuKvm.yml
    - name: VM - daemon
      ansible.builtin.import_tasks: tasks/VM/config_all-VM-daemon.yml
    - name: VM - users
      ansible.builtin.import_tasks: tasks/VM/config_all-VM-users.yml
    - name: VM - create
      ansible.builtin.import_tasks: tasks/VM/config_all-VM-QemuKvm-create.yml
    - name: VM - create fix
      ansible.builtin.import_tasks: tasks/fix/config_all-VM-QemuKvm-create_fix.yml
    # ----------------------------------------------------------
    # ### sudo-ansible-user + cronjob:
    - name: Config ansible user
      ansible.builtin.import_tasks: tasks/basic_all/config_all-ansible-users.yml
    - name: Config Cron
      ansible.builtin.import_tasks: tasks/basic_all/config_all-cron.yml
    # ----------------------------------------------------------
    # ### cleanup:
    - name: Cleanup
      ansible.builtin.import_tasks: tasks/basic_all/all_cleanup.yml


- name: Genome Shell Extension + Desktop Settings
  hosts: localhost
  connection: local
  become: true
  become_user: "{{ env_user }}"
  tasks:
    # - name: Gnomeshell Extension packages
    #  ansible.builtin.import_tasks: tasks/Desktop_Gnome/packages_workstation-Gnome-GnomeshellExtensions.yml
    # - name: Config Gnomeshell Extension
    #  ansible.builtin.import_tasks: tasks/Desktop_Gnome/config_workstation-Gnome-GnomeshellExtensions.yml
    - name: Config Gnome Desktop Preferences
      ansible.builtin.import_tasks: tasks/Desktop_Gnome/config_workstation-Gnome-DesktopPreferences.yml


- name: Write Final Message
  hosts: localhost
  connection: local
  become: true
  become_user: "{{ env_user }}"
  tasks:
    - name: Write Final Message
      ansible.builtin.debug:
        msg: "Please restart the system for the changes to take effect!"


# - name: Reboot system
#   hosts: localhost
#   connection: local
#   become: true
#   tasks:
#     - name: RebootSystem
#       ansible.builtin.import_tasks: tasks/basic_all/all_reboot.yml
#       # da hier local/pull --> geht nicht
#       # FAILED! => {"changed": false, "elapsed": 0, "msg": "Running reboot with local connection would reboot the control node.", "rebooted": false}
